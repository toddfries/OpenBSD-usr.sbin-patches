? allback.diff
? dvmrpd
? dvmrpd.cat8
? dvmrpd.conf.cat5
? parse.c
Index: dvmrpd.h
===================================================================
RCS file: /cvs/src/usr.sbin/dvmrpd/dvmrpd.h,v
retrieving revision 1.11
retrieving revision 1.12
diff -u -r1.11 -r1.12
--- dvmrpd.h	7 Dec 2008 16:37:04 -0000	1.11
+++ dvmrpd.h	19 Jan 2009 20:40:31 -0000	1.12
@@ -1,4 +1,4 @@
-/*	$OpenBSD: dvmrpd.h,v 1.11 2008/12/07 16:37:04 michele Exp $ */
+/*	$OpenBSD: dvmrpd.h,v 1.12 2009/01/19 20:40:31 michele Exp $ */
 
 /*
  * Copyright (c) 2004, 2005, 2006 Esben Norby <norby@openbsd.org>
@@ -234,7 +234,6 @@
 	int			 fd;
 	int			 state;
 	int			 mtu;
-	int			 nbr_cnt;
 	int			 adj_cnt;
 
 	u_int16_t		 flags;
@@ -323,7 +322,6 @@
 	unsigned int		 ifindex;
 	int			 state;
 	int			 mtu;
-	int			 nbr_cnt;
 	int			 adj_cnt;
 
 	u_int16_t		 flags;
Index: interface.c
===================================================================
RCS file: /cvs/src/usr.sbin/dvmrpd/interface.c,v
retrieving revision 1.5
retrieving revision 1.6
diff -u -r1.5 -r1.6
--- interface.c	11 Sep 2007 18:23:05 -0000	1.5
+++ interface.c	19 Jan 2009 20:40:31 -0000	1.6
@@ -1,4 +1,4 @@
-/*	$OpenBSD: interface.c,v 1.5 2007/09/11 18:23:05 claudio Exp $ */
+/*	$OpenBSD: interface.c,v 1.6 2009/01/19 20:40:31 michele Exp $ */
 
 /*
  * Copyright (c) 2005 Claudio Jeker <claudio@openbsd.org>
@@ -643,7 +643,6 @@
 	ictl.ifindex = iface->ifindex;
 	ictl.state = iface->state;
 	ictl.mtu = iface->mtu;
-	ictl.nbr_cnt = iface->nbr_cnt;
 	ictl.adj_cnt = iface->adj_cnt;
 
 	ictl.gen_id = iface->gen_id;
Index: rde.c
===================================================================
RCS file: /cvs/src/usr.sbin/dvmrpd/rde.c,v
retrieving revision 1.6
retrieving revision 1.7
diff -u -r1.6 -r1.7
--- rde.c	2 Dec 2008 13:42:44 -0000	1.6
+++ rde.c	19 Jan 2009 20:40:31 -0000	1.7
@@ -1,4 +1,4 @@
-/*	$OpenBSD: rde.c,v 1.6 2008/12/02 13:42:44 michele Exp $ */
+/*	$OpenBSD: rde.c,v 1.7 2009/01/19 20:40:31 michele Exp $ */
 
 /*
  * Copyright (c) 2004, 2005 Claudio Jeker <claudio@openbsd.org>
@@ -39,6 +39,8 @@
 #include "log.h"
 #include "rde.h"
 
+void		 rde_ds_iface(struct mfc *, struct iface *, struct rt_node *);
+
 void		 rde_nbr_init(u_int32_t);
 void		 rde_nbr_free(void);
 struct rde_nbr	*rde_nbr_find(u_int32_t);
@@ -198,6 +200,7 @@
 	struct imsg		 imsg;
 	struct route_report	 rr;
 	struct rde_nbr		 rn;
+	struct rt_node		*r;
 	int			 i, n, connected = 0;
 	struct iface		*iface;
 
@@ -260,11 +263,16 @@
 			for (i = 0; i < MAXVIFS; i++)
 				mfc.ttls[i] = 0;
 
-			LIST_FOREACH(iface, &rdeconf->iface_list, entry) {
-				if (mfc.ifindex != iface->ifindex)
-					mfc.ttls[iface->ifindex] = 1;
+			r = rt_matchorigin(mfc.origin.s_addr);
+			if (r == NULL) {
+				log_debug("rde_dispatch_imsg: "
+				    "packet from unknown origin");
+				break;
 			}
 
+			LIST_FOREACH(iface, &rdeconf->iface_list, entry)
+				rde_ds_iface(&mfc, iface, r);
+
 			mfc_update(&mfc);
 #endif
 			break;
@@ -297,6 +305,30 @@
 		imsg_free(&imsg);
 	}
 	imsg_event_add(ibuf);
+}
+
+/* 1) Add interfaces with downstream routers for this
+      source.
+   2) Add interfaces with member for this group if i am
+      the designated forwarder.
+*/
+void
+rde_ds_iface(struct mfc *mfc, struct iface *iface, struct rt_node *r)
+{
+	if (mfc->ifindex == iface->ifindex) {
+		return;
+	}
+
+	if (r->ds_cnt[iface->ifindex] != 0) {
+		mfc->ttls[iface->ifindex] = 1;
+		return;
+	}
+
+	if (group_list_find(iface, mfc->group.s_addr) &&
+	    r->adv_rtr[iface->ifindex].addr.s_addr == iface->addr.s_addr) {
+		mfc->ttls[iface->ifindex] = 1;
+		return;
+	}
 }
 
 LIST_HEAD(rde_nbr_head, rde_nbr);
Index: rde.h
===================================================================
RCS file: /cvs/src/usr.sbin/dvmrpd/rde.h,v
retrieving revision 1.7
retrieving revision 1.8
diff -u -r1.7 -r1.8
--- rde.h	7 Dec 2008 16:37:04 -0000	1.7
+++ rde.h	19 Jan 2009 20:40:31 -0000	1.8
@@ -1,4 +1,4 @@
-/*	$OpenBSD: rde.h,v 1.7 2008/12/07 16:37:04 michele Exp $ */
+/*	$OpenBSD: rde.h,v 1.8 2009/01/19 20:40:31 michele Exp $ */
 
 /*
  * Copyright (c) 2005, 2006 Esben Norby <norby@openbsd.org>
@@ -96,6 +96,7 @@
 void		 rt_init(void);
 int		 rt_compare(struct rt_node *, struct rt_node *);
 struct rt_node	*rt_find(in_addr_t, u_int8_t);
+struct rt_node	*rt_matchorigin(in_addr_t);
 struct rt_node	*rr_new_rt(struct route_report *, u_int32_t, int);
 int		 rt_insert(struct rt_node *);
 void		 rt_update(struct rt_node *);
Index: rde_srt.c
===================================================================
RCS file: /cvs/src/usr.sbin/dvmrpd/rde_srt.c,v
retrieving revision 1.12
retrieving revision 1.14
diff -u -r1.12 -r1.14
--- rde_srt.c	7 Dec 2008 16:37:04 -0000	1.12
+++ rde_srt.c	19 Jan 2009 20:52:09 -0000	1.14
@@ -1,6 +1,7 @@
-/*	$OpenBSD: rde_srt.c,v 1.12 2008/12/07 16:37:04 michele Exp $ */
+/*	$OpenBSD: rde_srt.c,v 1.14 2009/01/19 20:52:09 michele Exp $ */
 
 /*
+ * Copyright (c) 2009 Michele Marchetto <michele@openbsd.org>
  * Copyright (c) 2005, 2006 Esben Norby <norby@openbsd.org>
  *
  * Permission to use, copy, modify, and distribute this software for any
@@ -162,6 +163,18 @@
 }
 
 struct rt_node *
+rt_matchorigin(in_addr_t src)
+{
+	struct rt_node	*r;
+
+	RB_FOREACH(r, rt_tree, &rt)
+		if (r->prefix.s_addr == (src & prefixlen2mask(r->prefixlen)))
+			return (r);
+
+	return (NULL);
+}
+
+struct rt_node *
 rr_new_rt(struct route_report *rr, u_int32_t adj_metric, int connected)
 {
 	struct timespec	 now;
@@ -423,28 +436,24 @@
 srt_current_forwarder(struct rt_node *rn, struct iface *iface,
     u_int32_t metric, u_int32_t nbr_report)
 {
-	/* If it is our designated forwarder */ 
-	if (nbr_report == rn->adv_rtr[iface->ifindex].addr.s_addr) {
+	struct adv_rtr *adv = &rn->adv_rtr[iface->ifindex];
+
+	if (nbr_report == adv->addr.s_addr) {
 		if (metric > rn->cost || (metric == rn->cost &&
-		    iface->addr.s_addr < nbr_report)) {
-			rn->adv_rtr[iface->ifindex].addr.s_addr =
-			    iface->addr.s_addr;
-			rn->adv_rtr[iface->ifindex].metric = rn->cost;
-
-			/* XXX: check if there are groups with this source */
-			if (group_list_empty(iface))
-				rn->ttls[iface->ifindex] = 1;
-		}
-	} else if (metric < rn->adv_rtr[iface->ifindex].metric ||
-	    (metric == rn->adv_rtr[iface->ifindex].metric &&
-	    nbr_report < rn->adv_rtr[iface->ifindex].addr.s_addr)) {
-		if (rn->adv_rtr[iface->ifindex].addr.s_addr ==
-		    iface->addr.s_addr && !rn->ds_cnt[iface->ifindex])
-			rn->ttls[iface->ifindex] = 0;
+		    iface->addr.s_addr < nbr_report))
+			srt_set_forwarder_self(rn, iface);
 
-		rn->adv_rtr[iface->ifindex].addr.s_addr = nbr_report;
-		rn->adv_rtr[iface->ifindex].metric = metric;
+	} else {
+		if (metric < adv->metric ||
+		    (metric == adv->metric && nbr_report < adv->addr.s_addr))
+			if (adv->addr.s_addr == iface->addr.s_addr)
+				rn->ttls[iface->ifindex] = 0;
+
+		adv->addr.s_addr = nbr_report;
+		adv->metric = metric;
 	}
+
+	/* XXX: update the kernel */
 }
 
 void
@@ -463,6 +472,8 @@
 			srt_set_forwarder_self(rn, ifa);
 		}
 	}
+
+	/* XXX: update the kernel */
 }
 
 void
@@ -470,10 +481,9 @@
 {
 	rn->adv_rtr[iface->ifindex].addr.s_addr = iface->addr.s_addr;
 	rn->adv_rtr[iface->ifindex].metric = rn->cost;
+	rn->ttls[iface->ifindex] = 1;
 
-	/* XXX: check if there are groups with this source */
-	if (group_list_empty(iface))
-		rn->ttls[iface->ifindex] = 1;
+	/* XXX: update the kernel */
 }
 
 void
